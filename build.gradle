buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE")
    }
}
plugins {
  id "com.palantir.docker" version "0.19.2"
}

group = 'capcodigital'

apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'project-report'
apply plugin: 'jacoco'

repositories {
     mavenCentral()
}

bootJar {
    baseName = 'digital-engineering-rest-service'
    version =  '0.1.0'
}

dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")	{
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	} 
	compile("org.springframework.boot:spring-boot-starter-data-mongodb")	
	compile("io.springfox:springfox-swagger2:2.8.0")
	compile("io.springfox:springfox-swagger-ui:2.8.0")
    compile("org.mongodb:mongo-java-driver:3.4.1")
    compile("org.testng:testng:6.11")
	compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8'
 	compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.8'
 	 compile("org.springframework.boot:spring-boot-starter-thymeleaf")
  	compile("org.springframework.boot:spring-boot-starter-security")
	testCompile("org.springframework.boot:spring-boot-starter-test")
}

test {
        useTestNG() 
    }

docker {
    dependsOn build
    name "${project.group}/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

check.dependsOn jacocoTestReport
